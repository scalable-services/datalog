// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package services.scalable.database.grpc

@SerialVersionUID(0L)
final case class Datom(
    a: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None,
    v: _root_.scala.Option[_root_.com.google.protobuf.ByteString] = _root_.scala.None,
    e: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None,
    t: _root_.scala.Option[_root_.scala.Long] = _root_.scala.None,
    op: _root_.scala.Option[_root_.scala.Boolean] = _root_.scala.None
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[Datom] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      if (a.isDefined) {
        val __value = a.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
      };
      if (v.isDefined) {
        val __value = v.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(2, __value)
      };
      if (e.isDefined) {
        val __value = e.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
      };
      if (t.isDefined) {
        val __value = t.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(4, __value)
      };
      if (op.isDefined) {
        val __value = op.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(5, __value)
      };
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      a.foreach { __v =>
        val __m = __v
        _output__.writeString(1, __m)
      };
      v.foreach { __v =>
        val __m = __v
        _output__.writeBytes(2, __m)
      };
      e.foreach { __v =>
        val __m = __v
        _output__.writeString(3, __m)
      };
      t.foreach { __v =>
        val __m = __v
        _output__.writeInt64(4, __m)
      };
      op.foreach { __v =>
        val __m = __v
        _output__.writeBool(5, __m)
      };
    }
    def getA: _root_.scala.Predef.String = a.getOrElse("")
    def clearA: Datom = copy(a = _root_.scala.None)
    def withA(__v: _root_.scala.Predef.String): Datom = copy(a = Option(__v))
    def getV: _root_.com.google.protobuf.ByteString = v.getOrElse(_root_.com.google.protobuf.ByteString.EMPTY)
    def clearV: Datom = copy(v = _root_.scala.None)
    def withV(__v: _root_.com.google.protobuf.ByteString): Datom = copy(v = Option(__v))
    def getE: _root_.scala.Predef.String = e.getOrElse("")
    def clearE: Datom = copy(e = _root_.scala.None)
    def withE(__v: _root_.scala.Predef.String): Datom = copy(e = Option(__v))
    def getT: _root_.scala.Long = t.getOrElse(0L)
    def clearT: Datom = copy(t = _root_.scala.None)
    def withT(__v: _root_.scala.Long): Datom = copy(t = Option(__v))
    def getOp: _root_.scala.Boolean = op.getOrElse(false)
    def clearOp: Datom = copy(op = _root_.scala.None)
    def withOp(__v: _root_.scala.Boolean): Datom = copy(op = Option(__v))
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => a.orNull
        case 2 => v.orNull
        case 3 => e.orNull
        case 4 => t.orNull
        case 5 => op.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => a.map(_root_.scalapb.descriptors.PString(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 2 => v.map(_root_.scalapb.descriptors.PByteString(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 3 => e.map(_root_.scalapb.descriptors.PString(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 4 => t.map(_root_.scalapb.descriptors.PLong(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 5 => op.map(_root_.scalapb.descriptors.PBoolean(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: services.scalable.database.grpc.Datom.type = services.scalable.database.grpc.Datom
    // @@protoc_insertion_point(GeneratedMessage[services.scalable.database.grpc.Datom])
}

object Datom extends scalapb.GeneratedMessageCompanion[services.scalable.database.grpc.Datom] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[services.scalable.database.grpc.Datom] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): services.scalable.database.grpc.Datom = {
    var __a: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None
    var __v: _root_.scala.Option[_root_.com.google.protobuf.ByteString] = _root_.scala.None
    var __e: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None
    var __t: _root_.scala.Option[_root_.scala.Long] = _root_.scala.None
    var __op: _root_.scala.Option[_root_.scala.Boolean] = _root_.scala.None
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __a = Option(_input__.readStringRequireUtf8())
        case 18 =>
          __v = Option(_input__.readBytes())
        case 26 =>
          __e = Option(_input__.readStringRequireUtf8())
        case 32 =>
          __t = Option(_input__.readInt64())
        case 40 =>
          __op = Option(_input__.readBool())
        case tag => _input__.skipField(tag)
      }
    }
    services.scalable.database.grpc.Datom(
        a = __a,
        v = __v,
        e = __e,
        t = __t,
        op = __op
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[services.scalable.database.grpc.Datom] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      services.scalable.database.grpc.Datom(
        a = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Predef.String]]),
        v = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[_root_.com.google.protobuf.ByteString]]),
        e = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Predef.String]]),
        t = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Long]]),
        op = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Boolean]])
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ProtocolProto.javaDescriptor.getMessageTypes().get(0)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ProtocolProto.scalaDescriptor.messages(0)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = services.scalable.database.grpc.Datom(
    a = _root_.scala.None,
    v = _root_.scala.None,
    e = _root_.scala.None,
    t = _root_.scala.None,
    op = _root_.scala.None
  )
  implicit class DatomLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, services.scalable.database.grpc.Datom]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, services.scalable.database.grpc.Datom](_l) {
    def a: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.getA)((c_, f_) => c_.copy(a = Option(f_)))
    def optionalA: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Predef.String]] = field(_.a)((c_, f_) => c_.copy(a = f_))
    def v: _root_.scalapb.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.getV)((c_, f_) => c_.copy(v = Option(f_)))
    def optionalV: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.com.google.protobuf.ByteString]] = field(_.v)((c_, f_) => c_.copy(v = f_))
    def e: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.getE)((c_, f_) => c_.copy(e = Option(f_)))
    def optionalE: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Predef.String]] = field(_.e)((c_, f_) => c_.copy(e = f_))
    def t: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.getT)((c_, f_) => c_.copy(t = Option(f_)))
    def optionalT: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Long]] = field(_.t)((c_, f_) => c_.copy(t = f_))
    def op: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.getOp)((c_, f_) => c_.copy(op = Option(f_)))
    def optionalOp: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Boolean]] = field(_.op)((c_, f_) => c_.copy(op = f_))
  }
  final val A_FIELD_NUMBER = 1
  final val V_FIELD_NUMBER = 2
  final val E_FIELD_NUMBER = 3
  final val T_FIELD_NUMBER = 4
  final val OP_FIELD_NUMBER = 5
  def of(
    a: _root_.scala.Option[_root_.scala.Predef.String],
    v: _root_.scala.Option[_root_.com.google.protobuf.ByteString],
    e: _root_.scala.Option[_root_.scala.Predef.String],
    t: _root_.scala.Option[_root_.scala.Long],
    op: _root_.scala.Option[_root_.scala.Boolean]
  ): _root_.services.scalable.database.grpc.Datom = _root_.services.scalable.database.grpc.Datom(
    a,
    v,
    e,
    t,
    op
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[services.scalable.database.grpc.Datom])
}

object ProtocolProto extends _root_.scalapb.GeneratedFileObject {
  lazy val dependencies: Seq[_root_.scalapb.GeneratedFileObject] = Seq(
    scalapb.options.ScalapbProto,
    com.google.protobuf.wrappers.WrappersProto
  )
  lazy val messagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] =
    Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]](
      services.scalable.database.grpc.Datom
    )
  private lazy val ProtoBytes: _root_.scala.Array[Byte] =
      scalapb.Encoding.fromBase64(scala.collection.immutable.Seq(
  """Cg5wcm90b2NvbC5wcm90bxIfc2VydmljZXMuc2NhbGFibGUuZGF0YWJhc2UuZ3JwYxoVc2NhbGFwYi9zY2FsYXBiLnByb3RvG
  h5nb29nbGUvcHJvdG9idWYvd3JhcHBlcnMucHJvdG8isAEKBURhdG9tEhkKAWEYASABKAlCBuI/AxIBYUgAUgFhiAEBEhkKAXYYA
  iABKAxCBuI/AxIBdkgBUgF2iAEBEhkKAWUYAyABKAlCBuI/AxIBZUgCUgFliAEBEhkKAXQYBCABKANCBuI/AxIBdEgDUgF0iAEBE
  hwKAm9wGAUgASgIQgfiPwQSAm9wSARSAm9wiAEBQgQKAl9hQgQKAl92QgQKAl9lQgQKAl90QgUKA19vcEJACh9zZXJ2aWNlcy5zY
  2FsYWJsZS5kYXRhYmFzZS5ncnBjQhJDbGllbnRTZXJ2aWNlUHJvdG9QAeI/BhABKAFIAGIGcHJvdG8z"""
      ).mkString)
  lazy val scalaDescriptor: _root_.scalapb.descriptors.FileDescriptor = {
    val scalaProto = com.google.protobuf.descriptor.FileDescriptorProto.parseFrom(ProtoBytes)
    _root_.scalapb.descriptors.FileDescriptor.buildFrom(scalaProto, dependencies.map(_.scalaDescriptor))
  }
  lazy val javaDescriptor: com.google.protobuf.Descriptors.FileDescriptor = {
    val javaProto = com.google.protobuf.DescriptorProtos.FileDescriptorProto.parseFrom(ProtoBytes)
    com.google.protobuf.Descriptors.FileDescriptor.buildFrom(javaProto, _root_.scala.Array(
      scalapb.options.ScalapbProto.javaDescriptor,
      com.google.protobuf.wrappers.WrappersProto.javaDescriptor
    ))
  }
  @deprecated("Use javaDescriptor instead. In a future version this will refer to scalaDescriptor.", "ScalaPB 0.5.47")
  def descriptor: com.google.protobuf.Descriptors.FileDescriptor = javaDescriptor
}